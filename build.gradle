plugins {
    id "dev.architectury.loom" version "0.12.0-SNAPSHOT"
    id "maven-publish"
}


def ENV = System.getenv()

sourceCompatibility = targetCompatibility = JavaVersion.VERSION_17

version = "${project.mod_version}-build.${ENV.GITHUB_RUN_NUMBER ?: 9999}"
group = project.maven_group
archivesBaseName = project.archives_base_name

// needs to be done AFTER version is set
apply from: "https://raw.githubusercontent.com/FTBTeam/mods-meta/main/gradle/publishing.gradle"

loom {
    silentMojangMappingsLicense()

    forge {
        // specify the mixin configs used in this mod
        // this will be added to the jar manifest as well!
        mixinConfigs = [
                "ftbdimensions.mixins.json"
        ]
        dataGen {
            mod project.mod_id
        }
    }

    launches {
        data {
            arg "--existing", file("src/main/resources").absolutePath
        }
    }
}

repositories {
    mavenLocal()

    maven {
        name = 'ParchmentMC'
        url = 'https://maven.parchmentmc.org'
    }

    maven {
        url "https://maven.saps.dev/minecraft"
    }
}

dependencies {
    // to change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"

    mappings loom.layered() {
        officialMojangMappings()
        parchment("org.parchmentmc.data:parchment-1.19.2:2022.11.27@zip")
    }

    forge "net.minecraftforge:forge:${project.forge_version}"

    modImplementation("dev.ftb.mods:ftb-teams-forge:${teams_version}")
}

processResources {
    inputs.property "version", project.version

    filesMatching("META-INF/mods.toml") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
    options.release = 17
}

java {
    withSourcesJar()
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : project.mod_id,
                "Specification-Vendor"    : project.mod_author,
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : version,
                "Implementation-Vendor"   : project.mod_author,
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            // add all the jars that should be included when publishing to maven
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        if (ftbPublishing.ftbToken) {
            maven {
                url ftbPublishing.ftbURL
                credentials {
                    username = ftbPublishing.ftbUser
                    password = ftbPublishing.ftbToken
                }
            }
        }

        if (ftbPublishing.sapsToken) {
            maven {
                url ftbPublishing.sapsURL
                credentials {
                    username = ftbPublishing.sapsUser
                    password = ftbPublishing.sapsToken
                }
            }
        }
    }
}

if (ENV.CURSEFORGE_KEY) {
    curseforge {
        apiKey = ENV.CURSEFORGE_KEY
        project {
            id = project.curseforge_id_forge
            releaseType = relType
            addGameVersion "Forge"
            addGameVersion rootProject.minecraft_version
            mainArtifact(remapJar.archivePath)
            relations {
                requiredDependency 'ftb-library-forge'
                requiredDependency 'ftb-teams-forge'
            }
            changelog = ENV.CHANGELOG  // expected to exist if ENV.CURSEFORGE does
            changelogType = 'markdown'
        }
    }
}
